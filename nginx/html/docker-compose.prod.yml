version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        - BUILD_ENV=production
    container_name: custos_web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # Suporte a HTTPS
    volumes:
      - .:/var/www/html:ro  # Volume somente leitura para produção
      - php_logs:/var/log/php
      - apache_logs:/var/log/apache2
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html/public
      - TZ=America/Sao_Paulo
      - PHP_MEMORY_LIMIT=512M
      - PHP_MAX_EXECUTION_TIME=120
      - PHP_UPLOAD_MAX_FILESIZE=10M
      - PHP_POST_MAX_SIZE=10M
      - NODE_ENV=production
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthcheck.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  db:
    image: mysql:8.0
    container_name: custos_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=custo_extras
      - MYSQL_USER=custos
      - MYSQL_PASSWORD=custo#123
      - MYSQL_ROOT_PASSWORD=root
      - TZ=America/Sao_Paulo
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - mysql_logs:/var/log/mysql
      - ./docker/mysql/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:alpine
    container_name: custos_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  backup:
    image: alpine
    container_name: custos_backup
    volumes:
      - mysql_data:/backup/mysql:ro
      - redis_data:/backup/redis:ro
      - ./backups:/backup/output
    command: |
      sh -c 'while true; do
        tar czf /backup/output/backup-$$(date +%Y%m%d-%H%M%S).tar.gz /backup/mysql /backup/redis
        sleep 86400
      done'
    depends_on:
      - db
      - redis

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  php_logs:
    driver: local
  apache_logs:
    driver: local
  mysql_logs:
    driver: local
  redis_logs:
    driver: local
